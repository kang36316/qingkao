<?phpnamespace app\api\controller;use think\Controller;class WeiXin extends LoginAbstract{    private $_config = array(        'app_id' => '',        'app_secret' => '',        'callback' => "/api/Author/wxcallbak",        'terminal' => "pc",        'callback_wx' => "/api/Author/wxcallbak",        //订阅号appid        'app_id_d' => '',        //订阅号app_secret        'app_secret_d' => '',    );    // 全局唯一实例    private static $_app = null;    public  function __construct($config) {        $this->_config = array_replace_recursive($this->_config,$config);    }    static function init($config) {        if (null == self::$_app) {            self::$_app = new Weixin($config);        }        return self::$_app;    }    function login($callback=null){        $state  = md5(uniqid(rand(), TRUE));        session('wx_state', $state); //存到SESSION        if($callback!=null){            $callback = $this->getCallback($callback);        }else{            $callback = $this->getCallback($this->_config['callback']);        }        $callback = urlencode($callback);        $wxurl = "https://open.weixin.qq.com/connect/qrconnect?appid=".$this->_config['app_id']."&redirect_uri={$callback}&response_type=code&scope=snsapi_login&state={$state}#wechat_redirect";        $this->redirect($wxurl);        //header("Location: $wxurl");    }    function authorize($callback=null){        $AppID = $this->_config['app_id_d'];        $AppSecret = $this->_config['app_secret_d'];        if($callback!=null){            $callback = $this->getCallback($callback);        }else{            $callback = $this->getCallback($this->_config['callback_wx']);        }        $callback = urlEncode($callback);        $state = md5(uniqid(rand(), TRUE));        session('wap_wx_status', $state);        $url = 'https://open.weixin.qq.com/connect/oauth2/authorize?appid=' . $AppID . '&redirect_uri=' . $callback . '&response_type=code&scope=snsapi_userinfo&state=' . $state . '#wechat_redirect';        header("Location: $url");    }    /**     * 验证，PC端扫描和手机端登录公用     * (non-PHPdoc)     * @see LoginAbstract::auth()     */    function auth(){        if($_GET['state']!=session('wx_state')&&$_GET['state'] != session('wap_wx_status')){            $this->error('登录失败！请稍后重试', url("index/user/login"), 1);            exit;        }else{            session('wx_state', null);            session('wap_wx_status', null);        }        if($this->_config['terminal']=="pc"){            $AppID = $this->_config['app_id'];            $AppSecret = $this->_config['app_secret'];        }else{            $AppID = $this->_config['app_id_d'];            $AppSecret = $this->_config['app_secret_d'];        }        $code = $_GET['code'];        $url='https://api.weixin.qq.com/sns/oauth2/access_token?appid='.$AppID.'&secret='.$AppSecret.'&code='.$code.'&grant_type=authorization_code';        $ch = curl_init();        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);        curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE);        curl_setopt($ch, CURLOPT_URL, $url);        $json =  curl_exec($ch);        curl_close($ch);        $arr=json_decode($json,1);        return $arr;    }    function callback(){}    function getUserInfo(){        $oauth = $this->auth();        $url='https://api.weixin.qq.com/sns/userinfo?access_token='.$oauth['access_token'].'&openid='.$oauth['openid'].'&lang=zh_CN';        $ch = curl_init();        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);        curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE);        curl_setopt($ch, CURLOPT_URL, $url);        $json =  curl_exec($ch);        curl_close($ch);        $info=json_decode($json,1);//得到 用户资料        return $info;    }    /**     * 获取回调地址     * @param unknown_type $callback     * @return multitype:string number     */    function getCallback($callback){        if(strpos($callback,'http://')===false){            $this->_config['callback'] = is_https() . $_SERVER['HTTP_HOST'] . $callback;        }else{            $this->_config['callback'] = $callback;        }        return $this->_config['callback'];    }}?>